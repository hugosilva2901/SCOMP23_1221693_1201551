synchronization pattern: synchronization of execution
( 2 semaphore; all initialized at 1)

 Define constants for semaphore and shared memory names
 Define a Ticket structure with a ticketNumber field
 In the main function:
     Open two semaphores with initial value 1
     Check if semaphores opened successfully, exit with error if not
     Create and open a shared memory object
     Check if shared memory object opened successfully, exit with error if not
     Map the shared memory object to an integer pointer
     Check if mapping was successful, exit with error if not
     Loop 5 times:
         Print "test1"
         Create a child process using fork
         In the child process:
             Print "test2"
             Wait on the wait_for_ticket semaphore
             Print "test3"
             Get the ticket number from the shared memory
             Print the ticket number and child process ID
             Post on the ticket_to_customer semaphore
             Exit successfully
     Close both semaphores
     Return 0
